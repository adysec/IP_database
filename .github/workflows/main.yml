name: Daily Update IP database

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 12 * * *'
    
env:
  innoextract_version: 1.9
  arch: amd64
 
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install requests
          pip install bs4

      # 初始化状态跟踪文件
      - name: Initialize status tracking
        run: |
          echo "# Update Status Report" > update_status.md
          echo "Date: $(date)" >> update_status.md
          echo "" >> update_status.md

      - name: Update qqwry.dat
        continue-on-error: true
        shell: pwsh
        run: |
          echo "Updating qqwry.dat..."
          if (python qqwry.py) {
            try {
              unzip *.zip setup.exe
              chmod +x innoextract
              ./innoextract setup.exe -I qqwry.dat
              mv app/qqwry.dat qqwry/qqwry.dat
              rm -rf setup.exe
              rm -rf *.zip*
              rm -rf app/
              echo "✅ qqwry.dat: SUCCESS" >> update_status.md
            } catch {
              echo "❌ qqwry.dat: FAILED during extraction" >> update_status.md
              exit 1
            }
          } else {
            echo "❌ qqwry.dat: FAILED during download" >> update_status.md
            exit 1
          }
          
      - name: Update GeoLite2-ASN
        continue-on-error: true
        run: |
          echo "Updating GeoLite2-ASN..."
          # 尝试主要源
          if wget --timeout=30 --tries=3 https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-ASN.mmdb -O geolite/GeoLite2-ASN.mmdb; then
            echo "✅ GeoLite2-ASN: SUCCESS (primary source)" >> update_status.md
          else
            echo "❌ GeoLite2-ASN: FAILED" >> update_status.md
          fi

      - name: Update GeoLite2-City
        continue-on-error: true
        run: |
          echo "Updating GeoLite2-City..."
          if wget --timeout=30 --tries=3 https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-City.mmdb -O geolite/GeoLite2-City.mmdb; then
            echo "✅ GeoLite2-City: SUCCESS" >> update_status.md
          else
            echo "❌ GeoLite2-City: FAILED" >> update_status.md
          fi

      - name: Update GeoLite2-Country
        continue-on-error: true
        run: |
          echo "Updating GeoLite2-Country..."
          if wget --timeout=30 --tries=3 https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-Country.mmdb -O geolite/GeoLite2-Country.mmdb; then
            echo "✅ GeoLite2-Country: SUCCESS" >> update_status.md
          else
            echo "❌ GeoLite2-Country: FAILED" >> update_status.md
          fi
      
      - name: Update ip2region
        continue-on-error: true
        run: |
          echo "Updating ip2region..."
          if wget --timeout=30 --tries=3 https://github.com/lionsoul2014/ip2region/raw/master/data/ip2region_v4.xdb -O ip2region/ip2region.xdb; then
            echo "✅ ip2region: SUCCESS" >> update_status.md
          else
            echo "❌ ip2region: FAILED" >> update_status.md
          fi
          # wget https://github.com/lionsoul2014/ip2region/raw/master/data/ip.merge.txt -O ip2region/ip.merge.txt
          
      - name: Update 17monipdb
        continue-on-error: true
        run: |
          echo "Updating 17monipdb..."
          if wget --timeout=30 --tries=3 https://github.com/igreedy/ip_finder/raw/master/17monipdb.dat -O 17monipdb/17monipdb.dat; then
            echo "✅ 17monipdb: SUCCESS" >> update_status.md
          else
            echo "❌ 17monipdb: FAILED" >> update_status.md
          fi
      
      - name: Update IPDB
        continue-on-error: true
        run: |
          echo "Updating IPDB..."
          if wget --timeout=30 --tries=3 https://raw.githubusercontent.com/ipipdotnet/ipdb-go/master/city.free.ipdb -O ipdb/city.free.ipdb; then
            echo "✅ IPDB: SUCCESS" >> update_status.md
          else
            echo "❌ IPDB: FAILED" >> update_status.md
          fi
      
      - name: Update DB-IP City
        continue-on-error: true
        run: |
          echo "Updating DB-IP City..."
          # 尝试主要源
          if wget --timeout=30 --tries=3 "https://github.com/sapics/ip-location-db/raw/refs/heads/main/dbip-city-mmdb/dbip-city-ipv4.mmdb" -O db-ip/dbip-city-lite.mmdb; then
            echo "✅ DB-IP City: SUCCESS (primary source)" >> update_status.md
          # 尝试备用源
          elif wget --timeout=30 --tries=3 "https://cdn.jsdelivr.net/npm/@ip-location-db/dbip-city-mmdb/dbip-city-ipv4.mmdb" -O db-ip/dbip-city-lite.mmdb; then
            echo "✅ DB-IP City: SUCCESS (fallback source)" >> update_status.md
          else
            echo "❌ DB-IP City: FAILED" >> update_status.md
          fi

      - name: Update DB-IP ASN
        continue-on-error: true
        run: |
          echo "Updating DB-IP ASN..."
          if wget --timeout=30 --tries=3 "https://cdn.jsdelivr.net/npm/@ip-location-db/dbip-asn-mmdb/dbip-asn-ipv4.mmdb" -O db-ip/dbip-asn-lite.mmdb; then
            echo "✅ DB-IP ASN: SUCCESS" >> update_status.md
          else
            echo "❌ DB-IP ASN: FAILED" >> update_status.md
          fi

      - name: Update DB-IP Country
        continue-on-error: true
        run: |
          echo "Updating DB-IP Country..."
          # 尝试主要源
          if wget --timeout=30 --tries=3 "https://cdn.jsdelivr.net/npm/@ip-location-db/dbip-country-mmdb/dbip-country-ipv4.mmdb" -O db-ip/dbip-country-lite.mmdb; then
            echo "✅ DB-IP Country: SUCCESS (primary source)" >> update_status.md
          # 尝试备用源
          elif wget --timeout=30 --tries=3 "https://github.com/sapics/ip-location-db/raw/refs/heads/main/dbip-country-mmdb/dbip-country-ipv4.mmdb" -O db-ip/dbip-country-lite.mmdb; then
            echo "✅ DB-IP Country: SUCCESS (fallback source)" >> update_status.md
          else
            echo "❌ DB-IP Country: FAILED" >> update_status.md
          fi

      # 显示更新状态报告
      - name: Show update status
        run: |
          echo "=== Update Status Report ==="
          cat update_status.md
          echo "=========================="

      # 检查是否有任何文件被修改，即使部分更新失败也继续提交
      - name: Check for changes and commit
        run: |
          echo $(date +'%Y%m%d') > date.txt
          git config --local user.email "admin@adysec.com"
          git config --local user.name "adysec"
          git add .
          
          # 检查是否有变更
          if git diff --cached --quiet; then
            echo "No changes detected, skipping commit"
          else
            # 统计成功和失败的更新
            success_count=$(grep -c "✅" update_status.md || echo "0")
            failed_count=$(grep -c "❌" update_status.md || echo "0")
            
            commit_message="$(date +'%Y%m%d') - Updated IP databases (${success_count} success, ${failed_count} failed)"
            echo "Committing changes: $commit_message"
            git commit -m "$commit_message"
            
            # 推送变更，如果失败则重试
            for i in {1..3}; do
              if git push -v --progress; then
                echo "Push successful on attempt $i"
                break
              else
                echo "Push failed on attempt $i, retrying..."
                sleep 5
              fi
            done
          fi
