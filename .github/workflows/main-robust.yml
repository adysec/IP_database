name: Daily Update IP database (Robust Version)

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 12 * * *'
    
env:
  innoextract_version: 1.9
  arch: amd64
 
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install requests
          pip install bs4

      # 准备下载脚本
      - name: Prepare download script
        run: |
          mkdir -p scripts
          chmod +x scripts/robust_download.sh

      # 初始化状态跟踪文件
      - name: Initialize status tracking
        run: |
          echo "# Update Status Report" > update_status.md
          echo "Date: $(date)" >> update_status.md
          echo "Workflow: ${{ github.workflow }}" >> update_status.md
          echo "Run ID: ${{ github.run_id }}" >> update_status.md
          echo "" >> update_status.md

      - name: Update qqwry.dat
        continue-on-error: true
        shell: bash
        run: |
          echo "Updating qqwry.dat..."
          if python qqwry.py; then
            if [ -f *.zip ]; then
              if unzip *.zip setup.exe && chmod +x innoextract && ./innoextract setup.exe -I qqwry.dat; then
                if [ -f app/qqwry.dat ]; then
                  mv app/qqwry.dat qqwry/qqwry.dat
                  rm -rf setup.exe *.zip* app/
                  echo "✅ qqwry.dat: SUCCESS" >> update_status.md
                  echo "✅ qqwry.dat 更新成功"
                else
                  echo "❌ qqwry.dat: FAILED - extraction did not produce expected file" >> update_status.md
                fi
              else
                echo "❌ qqwry.dat: FAILED - extraction failed" >> update_status.md
              fi
            else
              echo "❌ qqwry.dat: FAILED - no zip file downloaded" >> update_status.md
            fi
          else
            echo "❌ qqwry.dat: FAILED - download script failed" >> update_status.md
          fi
          
      - name: Update GeoLite2-ASN
        continue-on-error: true
        run: |
          ./scripts/robust_download.sh \
            "https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-ASN.mmdb" \
            "geolite/GeoLite2-ASN.mmdb" \
            "GeoLite2-ASN"

      - name: Update GeoLite2-City
        continue-on-error: true
        run: |
          ./scripts/robust_download.sh \
            "https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-City.mmdb" \
            "geolite/GeoLite2-City.mmdb" \
            "GeoLite2-City"

      - name: Update GeoLite2-Country
        continue-on-error: true
        run: |
          ./scripts/robust_download.sh \
            "https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-Country.mmdb" \
            "geolite/GeoLite2-Country.mmdb" \
            "GeoLite2-Country"
      
      - name: Update ip2region
        continue-on-error: true
        run: |
          ./scripts/robust_download.sh \
            "https://github.com/lionsoul2014/ip2region/raw/master/data/ip2region_v4.xdb" \
            "ip2region/ip2region.xdb" \
            "ip2region" \
            "https://raw.githubusercontent.com/lionsoul2014/ip2region/master/data/ip2region_v4.xdb"
          
      - name: Update 17monipdb
        continue-on-error: true
        run: |
          ./scripts/robust_download.sh \
            "https://github.com/igreedy/ip_finder/raw/master/17monipdb.dat" \
            "17monipdb/17monipdb.dat" \
            "17monipdb"
      
      - name: Update IPDB
        continue-on-error: true
        run: |
          ./scripts/robust_download.sh \
            "https://raw.githubusercontent.com/ipipdotnet/ipdb-go/master/city.free.ipdb" \
            "ipdb/city.free.ipdb" \
            "IPDB"
      
      - name: Update DB-IP City
        continue-on-error: true
        run: |
          ./scripts/robust_download.sh \
            "https://github.com/sapics/ip-location-db/raw/refs/heads/main/dbip-city-mmdb/dbip-city-ipv4.mmdb" \
            "db-ip/dbip-city-lite.mmdb" \
            "DB-IP City" \
            "https://cdn.jsdelivr.net/npm/@ip-location-db/dbip-city-mmdb/dbip-city-ipv4.mmdb"

      - name: Update DB-IP ASN
        continue-on-error: true
        run: |
          ./scripts/robust_download.sh \
            "https://cdn.jsdelivr.net/npm/@ip-location-db/dbip-asn-mmdb/dbip-asn-ipv4.mmdb" \
            "db-ip/dbip-asn-lite.mmdb" \
            "DB-IP ASN"

      - name: Update DB-IP Country
        continue-on-error: true
        run: |
          ./scripts/robust_download.sh \
            "https://cdn.jsdelivr.net/npm/@ip-location-db/dbip-country-mmdb/dbip-country-ipv4.mmdb" \
            "db-ip/dbip-country-lite.mmdb" \
            "DB-IP Country" \
            "https://github.com/sapics/ip-location-db/raw/refs/heads/main/dbip-country-mmdb/dbip-country-ipv4.mmdb"

      # 显示更新状态报告
      - name: Show update status
        run: |
          echo "=== Update Status Report ==="
          cat update_status.md
          echo "=========================="

      # 生成详细的更新摘要
      - name: Generate update summary
        run: |
          echo "" >> update_status.md
          echo "## Summary" >> update_status.md
          success_count=$(grep -c "✅" update_status.md || echo "0")
          failed_count=$(grep -c "❌" update_status.md || echo "0")
          warning_count=$(grep -c "⚠️" update_status.md || echo "0")
          
          echo "- ✅ Successful updates: $success_count" >> update_status.md
          echo "- ❌ Failed updates: $failed_count" >> update_status.md
          echo "- ⚠️  Updates with warnings: $warning_count" >> update_status.md
          echo "- 📊 Total attempted: $((success_count + failed_count + warning_count))" >> update_status.md

      # 检查是否有任何文件被修改，即使部分更新失败也继续提交
      - name: Check for changes and commit
        run: |
          echo $(date +'%Y%m%d') > date.txt
          git config --local user.email "admin@adysec.com"
          git config --local user.name "adysec"
          git add .
          
          # 检查是否有变更
          if git diff --cached --quiet; then
            echo "No changes detected, skipping commit"
            echo "## Result: No changes to commit" >> update_status.md
          else
            # 统计成功和失败的更新
            success_count=$(grep -c "✅" update_status.md || echo "0")
            failed_count=$(grep -c "❌" update_status.md || echo "0")
            warning_count=$(grep -c "⚠️" update_status.md || echo "0")
            
            commit_message="$(date +'%Y%m%d') - IP database update (✅${success_count} ❌${failed_count} ⚠️${warning_count})"
            echo "Committing changes: $commit_message"
            git commit -m "$commit_message"
            
            echo "## Result: Changes committed successfully" >> update_status.md
            echo "Commit message: $commit_message" >> update_status.md
            
            # 推送变更，如果失败则重试
            push_success=false
            for i in {1..5}; do
              echo "Attempting to push (attempt $i/5)..."
              if git push -v --progress; then
                echo "✅ Push successful on attempt $i"
                echo "Push status: ✅ SUCCESS (attempt $i)" >> update_status.md
                push_success=true
                break
              else
                echo "❌ Push failed on attempt $i"
                if [ $i -lt 5 ]; then
                  echo "Waiting 10 seconds before retry..."
                  sleep 10
                fi
              fi
            done
            
            if [ "$push_success" = false ]; then
              echo "❌ All push attempts failed"
              echo "Push status: ❌ FAILED after 5 attempts" >> update_status.md
              exit 1
            fi
          fi

      # 最终状态报告
      - name: Final status report
        if: always()
        run: |
          echo ""
          echo "=== FINAL UPDATE REPORT ==="
          cat update_status.md
          echo "=========================="